{
  "name": "github-user-replica",
  "type": "registry:component",
  "category": "Replica",
  "namespace": "@quffeui/replica",
  "description": "Standalone GitHub user view with profile hovercard",
  "dependencies": [],
  "registryDependencies": [
    "avatar",
    "tooltip"
  ],
  "files": [
    {
      "type": "registry:component",
      "path": "Replica/Github/views/user-replica.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport type { ComponentProps } from \"react\"\nimport { Users, UserPlus, MapPin } from \"lucide-react\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Tooltip, TooltipContent, TooltipTrigger } from \"@/components/ui/tooltip\"\n\ntype GithubUserResource = {\n  kind: \"user\"\n  id: number\n  login: string\n  name?: string | null\n  avatar_url?: string | null\n  html_url: string\n  bio?: string | null\n  followers?: number | null\n  following?: number | null\n  location?: string | null\n}\n\nfunction cn(...classes: (string | null | undefined | false)[]) {\n  return classes.filter(Boolean).join(\" \")\n}\n\nexport type GithubUserReplicaProps = {\n  data: GithubUserResource\n  className?: string\n  linkProps?: ComponentProps<\"a\">\n}\n\nexport function GithubUserReplica({ data, className, linkProps }: GithubUserReplicaProps) {\n  const content = (\n    <div className={cn(\"inline-flex items-baseline gap-2\", className)}>\n      <Avatar className=\"size-4\">\n        <AvatarImage src={data.avatar_url ?? undefined} alt={`${data.login} avatar`} />\n        <AvatarFallback aria-hidden>{data.login?.slice(0, 2).toUpperCase()}</AvatarFallback>\n      </Avatar>\n      <Link\n        href={data.html_url}\n        className=\"hover:underline text-sm\"\n        aria-label={`Open GitHub profile for ${data.login}`}\n        {...linkProps}\n      >\n        <bdi className=\"font-medium\">{data.name ?? data.login}</bdi>\n        <span className=\"text-muted-foreground\"> @{data.login}</span>\n      </Link>\n    </div>\n  )\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{content}</TooltipTrigger>\n      <TooltipContent\n        sideOffset={12}\n        align=\"start\"\n        className=\"flex min-w-[260px] max-w-sm flex-col gap-4 border border-border bg-popover p-5 text-popover-foreground shadow-lg\"\n      >\n        <div className=\"flex items-center gap-3\">\n          <Avatar className=\"size-12\">\n            <AvatarImage src={data.avatar_url ?? undefined} alt={`${data.login} avatar`} />\n            <AvatarFallback>{data.login.slice(0, 2).toUpperCase()}</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <Link href={data.html_url} className=\"text-lg font-semibold hover:underline\">\n              {data.name ?? data.login}\n            </Link>\n            <p className=\"text-sm text-muted-foreground\">@{data.login}</p>\n          </div>\n        </div>\n\n        {data.bio ? <p className=\"text-sm text-muted-foreground\">{data.bio}</p> : null}\n\n        <div className=\"flex flex-wrap items-center gap-4 text-xs text-muted-foreground\">\n          {typeof data.followers === \"number\" ? (\n            <span className=\"inline-flex items-center gap-1\">\n              <Users className=\"size-3\" />\n              {formatNumber(data.followers)} followers\n            </span>\n          ) : null}\n          {typeof data.following === \"number\" ? (\n            <span className=\"inline-flex items-center gap-1\">\n              <UserPlus className=\"size-3\" />\n              {formatNumber(data.following)} following\n            </span>\n          ) : null}\n          {data.location ? (\n            <span className=\"inline-flex items-center gap-1\">\n              <MapPin className=\"size-3\" />\n              {data.location}\n            </span>\n          ) : null}\n        </div>\n      </TooltipContent>\n    </Tooltip>\n  )\n}\n\nfunction formatNumber(value: number) {\n  return new Intl.NumberFormat(undefined, {\n    notation: value >= 1000 ? \"compact\" : \"standard\",\n    maximumFractionDigits: 1,\n  }).format(value)\n}\n"
    }
  ]
}
