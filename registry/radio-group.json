{
  "name": "radio-group",
  "type": "registry:component",
  "category": "Form",
  "description": "RadioGroup component",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "path": "Form/RadioGroup.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface RadioOption {\n  value: string\n  label: string\n  disabled?: boolean\n}\n\nexport interface RadioGroupProps {\n  name: string\n  options: RadioOption[]\n  value?: string\n  onChange?: (value: string) => void\n  className?: string\n  disabled?: boolean\n}\n\nconst RadioGroup = React.forwardRef<HTMLDivElement, RadioGroupProps>(\n  ({ className, name, options, value, onChange, disabled, ...props }, ref) => {\n    return (\n      <div className={cn(\"space-y-2\", className)} ref={ref} {...props}>\n        {options.map(option => (\n          <div key={option.value} className=\"flex items-center space-x-2\">\n            <input\n              type=\"radio\"\n              id={`${name}-${option.value}`}\n              name={name}\n              value={option.value}\n              checked={value === option.value}\n              onChange={e => onChange?.(e.target.value)}\n              disabled={disabled || option.disabled}\n              className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 focus:ring-2\"\n            />\n            <label\n              htmlFor={`${name}-${option.value}`}\n              className={cn(\n                \"text-sm font-medium leading-none\",\n                (disabled || option.disabled) && \"opacity-50 cursor-not-allowed\"\n              )}\n            >\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </div>\n    )\n  }\n)\nRadioGroup.displayName = \"RadioGroup\"\n\nexport { RadioGroup }\n"
    }
  ]
}