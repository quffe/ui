{
  "name": "app-sidebar",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "next"
  ],
  "registryDependencies": [
    "sidebar",
    "label"
  ],
  "files": [
    {
      "type": "registry:ui",
      "path": "ui/app-sidebar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { usePathname } from \"next/navigation\"\nimport Link from \"next/link\"\nimport { FileText, Home, Type, Lock, AlignLeft, ChevronDown, CheckSquare, Circle, Upload, Search, Table, DollarSign, Hash, Calendar, SquareStack, Menu, MousePointer, List, Navigation } from 'lucide-react'\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarRail,\n  SidebarTrigger,\n} from \"@/components/ui/sidebar\"\nimport { Label } from \"@/components/ui/label\"\n\nconst components = [\n  // Data Components\n  {\n    title: \"DataTable\",\n    url: \"/docs/data-table\",\n    icon: Table,\n    description: \"Powerful data table with sorting and pagination\",\n    category: \"Data\"\n  },\n  // Input Components\n  {\n    title: \"InputAmount\",\n    url: \"/docs/input-amount\",\n    icon: DollarSign,\n    description: \"Specialized input for monetary amounts\",\n    category: \"Input\"\n  },\n  {\n    title: \"OtpInput\",\n    url: \"/docs/otp-input\",\n    icon: Hash,\n    description: \"One-time password input with multiple fields\",\n    category: \"Input\"\n  },\n  {\n    title: \"DateRangePicker\",\n    url: \"/docs/date-range-picker\",\n    icon: Calendar,\n    description: \"Date range picker with presets\",\n    category: \"Input\"\n  },\n  // Layout Components\n  {\n    title: \"AppSidebar\",\n    url: \"/docs/app-sidebar\",\n    icon: Menu,\n    description: \"Application sidebar with search and navigation\",\n    category: \"Layout\"\n  },\n  // Modal Components\n  {\n    title: \"Modal\",\n    url: \"/docs/modal\",\n    icon: SquareStack,\n    description: \"Flexible modal component with customizable sizing\",\n    category: \"Modal\"\n  },\n  // Navigation Components\n  {\n    title: \"Dropdown\",\n    url: \"/docs/dropdown\",\n    icon: ChevronDown,\n    description: \"Searchable dropdown with Command and Popover\",\n    category: \"Navigation\"\n  },\n  {\n    title: \"InputSelect\",\n    url: \"/docs/input-select\",\n    icon: List,\n    description: \"Type-safe select input with labels and validation\",\n    category: \"Navigation\"\n  },\n  {\n    title: \"SelectDropdown\",\n    url: \"/docs/select-dropdown\",\n    icon: MousePointer,\n    description: \"Custom dropdown with keyboard navigation\",\n    category: \"Navigation\"\n  },\n  // Legacy/Basic Components\n  {\n    title: \"Input\",\n    url: \"/docs/input\",\n    icon: Type,\n    description: \"Basic text input field\",\n    category: \"Basic\"\n  },\n  {\n    title: \"Password Input\",\n    url: \"/docs/password-input\",\n    icon: Lock,\n    description: \"Password input with toggle\",\n    category: \"Basic\"\n  },\n  {\n    title: \"Textarea\",\n    url: \"/docs/textarea\",\n    icon: AlignLeft,\n    description: \"Multi-line text input\",\n    category: \"Basic\"\n  },\n  {\n    title: \"Select\",\n    url: \"/docs/select\",\n    icon: ChevronDown,\n    description: \"Dropdown select component\",\n    category: \"Basic\"\n  },\n  {\n    title: \"Checkbox\",\n    url: \"/docs/checkbox\",\n    icon: CheckSquare,\n    description: \"Checkbox with label\",\n    category: \"Basic\"\n  },\n  {\n    title: \"Radio Group\",\n    url: \"/docs/radio-group\",\n    icon: Circle,\n    description: \"Radio button group\",\n    category: \"Basic\"\n  },\n  {\n    title: \"File Input\",\n    url: \"/docs/file-input\",\n    icon: Upload,\n    description: \"File upload component\",\n    category: \"Basic\"\n  }\n]\n\nexport function AppSidebar() {\n  const pathname = usePathname()\n  const [searchQuery, setSearchQuery] = React.useState(\"\")\n\n  const filteredComponents = components.filter(component =>\n    component.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    component.description.toLowerCase().includes(searchQuery.toLowerCase())\n  )\n\n  // Group components by category\n  const groupedComponents = filteredComponents.reduce((acc, component) => {\n    const category = component.category || 'Other'\n    if (!acc[category]) {\n      acc[category] = []\n    }\n    acc[category].push(component)\n    return acc\n  }, {} as Record<string, typeof components>)\n\n  return (\n    <Sidebar>\n      <SidebarHeader>\n        <div className=\"flex items-center gap-2 px-2 py-2\">\n          <div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\n            <FileText className=\"size-4\" />\n          </div>\n          <div className=\"flex flex-col gap-0.5 leading-none\">\n            <span className=\"font-semibold\">Form Components</span>\n            <span className=\"text-xs\">Documentation</span>\n          </div>\n        </div>\n        \n        <form className=\"px-2\">\n          <SidebarGroup className=\"py-0\">\n            <SidebarGroupContent className=\"relative\">\n              <Label htmlFor=\"search\" className=\"sr-only\">\n                Search components\n              </Label>\n              <SidebarInput\n                id=\"search\"\n                placeholder=\"Search components...\"\n                className=\"pl-8\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n              <Search className=\"pointer-events-none absolute left-2 top-1/2 size-4 -translate-y-1/2 select-none opacity-50\" />\n            </SidebarGroupContent>\n          </SidebarGroup>\n        </form>\n      </SidebarHeader>\n      \n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Navigation</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              <SidebarMenuItem>\n                <SidebarMenuButton asChild isActive={pathname === \"/\"}>\n                  <Link href=\"/\">\n                    <Home className=\"size-4\" />\n                    <span>Home</span>\n                  </Link>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n{Object.entries(groupedComponents).map(([category, categoryComponents]) => (\n          <SidebarGroup key={category}>\n            <SidebarGroupLabel>{category} Components</SidebarGroupLabel>\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {categoryComponents.map((component) => (\n                  <SidebarMenuItem key={component.title}>\n                    <SidebarMenuButton asChild isActive={pathname === component.url}>\n                      <Link href={component.url}>\n                        <component.icon className=\"size-4\" />\n                        <span>{component.title}</span>\n                      </Link>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                ))}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        ))}\n\n        {searchQuery && filteredComponents.length === 0 && (\n          <SidebarGroup>\n            <SidebarGroupContent>\n              <div className=\"px-2 py-4 text-sm text-muted-foreground\">\n                No components found for \"{searchQuery}\"\n              </div>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n      </SidebarContent>\n      <SidebarRail />\n    </Sidebar>\n  )\n}"
    }
  ]
}